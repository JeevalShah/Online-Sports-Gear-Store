USE DBMS;

CREATE TABLE BUYER (
    UserID INT PRIMARY KEY,
    UName VARCHAR(100),
    UPhone VARCHAR(10),
    UEmail VARCHAR(100) UNIQUE,
    UDOB DATE
);

CREATE TABLE SELLER (
    UserID INT PRIMARY KEY,
    UName VARCHAR(100),
    UPhone VARCHAR(10),
    UEmail VARCHAR(100) UNIQUE,
    UDOB DATE,
    SType VARCHAR(10),
    SID INT
);

CREATE TABLE STORE (
    SID INT PRIMARY KEY,
    SState VARCHAR(20),
    SCity VARCHAR(20),
    SStreet VARCHAR(50),
    SName VARCHAR(100),
    UserID INT UNIQUE
);

ALTER TABLE SELLER
ADD CONSTRAINT FK_SellerStore
FOREIGN KEY (SID) REFERENCES STORE(SID);

ALTER TABLE STORE
ADD CONSTRAINT FK_StoreSeller
FOREIGN KEY (UserID) REFERENCES SELLER(UserID);

CREATE TABLE PRODUCTS (
    PID INT PRIMARY KEY,
    PDes VARCHAR(255),
    PPrice DECIMAL(7,2),
    PName VARCHAR(50),
    PBrand VARCHAR(50),
    PQuantity INT,
    PCat VARCHAR(2),
    SID INT,
    FOREIGN KEY (SID) REFERENCES STORE(SID)
);

CREATE TABLE CART (
    UserID INT,
    PID INT,
    Quantity INT,
    PRIMARY KEY (UserID, PID),
    FOREIGN KEY (UserID) REFERENCES BUYER(UserID),
    FOREIGN KEY (PID) REFERENCES PRODUCTS(PID)
);

CREATE TABLE PAYMENTDETAILS (
    PayID INT PRIMARY KEY,
    CardNo VARCHAR(16),
    CName VARCHAR(100),
    CExpiry DATE,
    CCVV VARCHAR(3),
    OID INT
);

CREATE TABLE DELIVERY (
    AID INT PRIMARY KEY,
    UPin VARCHAR(6),
    UCity VARCHAR(20),
    UAddress VARCHAR(255),
    UserID INT,
    FOREIGN KEY (UserID) REFERENCES BUYER(UserID)
);

CREATE TABLE ORDERS (
    OID INT PRIMARY KEY,
    ODate DATE,
    OStatus VARCHAR(20),
    OTotal DECIMAL(10,2),
    AID INT,
    UserID INT,
    PayID INT,
    FOREIGN KEY (AID) REFERENCES DELIVERY(AID),
    FOREIGN KEY (UserID) REFERENCES BUYER(UserID),
    FOREIGN KEY (PayID) REFERENCES PAYMENTDETAILS(PayID)
);

ALTER TABLE PAYMENTDETAILS
ADD CONSTRAINT FK_PaymentOrders
FOREIGN KEY (OID) REFERENCES ORDERS(OID);

CREATE TABLE CONTAINS (
    PID INT,
    OID INT,
    Quantity INT,
    PRIMARY KEY (PID, OID),
    FOREIGN KEY (PID) REFERENCES PRODUCTS(PID),
    FOREIGN KEY (OID) REFERENCES ORDERS(OID)
);

CREATE TABLE MESSAGE (
	MID INT PRIMARY KEY,
    MDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Message VARCHAR(200),
    UserID INT,
    FOREIGN KEY (UserID) REFERENCES BUYER(UserID)
);

CREATE TABLE FEEDBACK (
	FID INT PRIMARY KEY,
    FDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    COMMENT VARCHAR(200),
    RATING INT,
    UserID INT,
    FOREIGN KEY (UserID) REFERENCES BUYER(UserID)
);
